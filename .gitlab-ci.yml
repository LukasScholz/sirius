# This is the Gradle build system for JVM applications
# https://gradle.org/
# https://github.com/gradle/gradle
#image: gradle:alpine
default:
  image: git.bio.informatik.uni-jena.de:5050/bioinf-mit/docker-images/ubuntu-zulu-fx-gradle:18.04-15.0.3-6.9-5
# Disable the Gradle daemon for Continuous Integration servers as correctness
# is usually a priority over speed in CI environments. Using a fresh
# runtime for each build is more reliable since the runtime is completely
# isolated from any previous builds.
stages:
  - clean
  - prepare
  - build
  - test
#  - build-cli
#  - build-multi-cli
#  - build-gui
  - publish

before_script:
  - eval `ssh-agent -s`
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null # add ssh key
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - echo "$GITLAB_GITHUB_SIRIUS_PUBLIC_KEY" >> ~/.ssh/id_ed25519.pub
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

#distCliLinux64:
#  variables:
#    GRADLE_OPTS: "-Dorg.gradle.daemon=false"
#  stage: build
#  script:
#    - cd sirius_dist/sirius_cli_single_os
#    - gradle clean artifactoryPublish --refresh-dependencies -P "de.unijena.bioinf.build.artifactory.username=$ARTIFACTORY_USERNAME" -P "de.unijena.bioinf.build.artifactory.password=$ARTIFACTORY_TOKEN"
#  cache:
#    key: "$CI_COMMIT_REF_NAME"
#    policy: push
#  tags:
#    - kubernetes
#  only:
#    refs:
#      - master
#      - master-dist-tests
#      - stable
#    # stupid there is no exclude if only specific type was changed, so we have to use some heuristic to exclude README only changes
#    # from pipeline
#    changes:
#      - "**/*.{java,gradle,properties,yml,tex,png,ico,json,xml,html,csv,tsv,py}"
#      - "**/src/main/java/**/*"
#
#distGuiLinux64:
#  variables:
#    GRADLE_OPTS: "-Dorg.gradle.daemon=false"
#  stage: build
#  script:
#    - cd sirius_dist/sirius_gui_single_os
#    - gradle clean artifactoryPublish --refresh-dependencies -P "de.unijena.bioinf.build.artifactory.username=$ARTIFACTORY_USERNAME" -P "de.unijena.bioinf.build.artifactory.password=$ARTIFACTORY_TOKEN"
#  cache:
#    key: "$CI_COMMIT_REF_NAME"
#    policy: push
#  tags:
#    - kubernetes
#  only:
#    refs:
#      - master
#      - master-dist-tests
#      - stable
#    # stupid there is no exclude if only specific type was changed, so we have to use some heuristic to exclude README only changes
#    # from pipeline
#    changes:
#      - "**/*.{java,gradle,properties,yml,tex,png,ico,json,xml,html,csv,tsv,py}"
#      - "**/src/main/java/**/*"

testDist:
  stage: test
  script:
    - cd sirius_dist
    - cd ..
    - gradle :sirius_dist:sirius_cli_single_os:distImage
    - .\sirius_dist\sirius_cli_single_os\build\distributions\sirius\sirius.exe --input \sirius_frontend\sirius_doc\manual\demo-data\mgf\laudanosine.mgf formula -p orbitrap fingerprint structure compound-classes write-summaries --output \sirius_frontend\sirius_cli\src\test\mgf_temp_summary
    - cd sirius_cli\src\test\java
    - javac MgfTest.java
    - java MgfTest
    - cd sirius_frontend/sirius_cli/src/test
    - rmdir mgf_temp_summary
    - cd sirius_frontend
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
  tags:
    - kubernetes
  only:
    refs:
      - master
      - master-dist-tests
      - stable

#    # testing MGF data
#    - sirius --input sirius_doc/manual/demo-data/mgf/laudanosine.mgf formula -p orbitrap fingerprint structure compound-classes write-summaries --output sirius_cli/src/test/mgf_temp_summary
#    - cd sirius_cli/src/test/java/
#    - javac MgfTest.java
#    - java MgfTest
#    - cd..
#    - rmdir mgf_temp_summary
#    - cd..
#    - cd..
#    - cd..
#
#    # testing TXT data
#    - sirius -1 sirius_doc/manual/demo-data/txt/chelidonine_ms.txt -2 sirius_doc/manual/demo-data/txt/chelidonine_msms1.txt,sirius_doc/manual/demo-data/txt/chelidonine_msms2.txt -z 354.134704589844 formula -p orbitrap write-summaries --output sirius_cli/src/test/txt_temp_summary
#    - cd sirius_cli/src/test/java/
#    - javac TxtTest.java
#    - java TxtTest
#    - cd..
#    - rmdir txt_temp_summary
#    - cd..
#    - cd..
#    - cd..
#
#    # testing MS data (three different commands)
#    - sirius -i sirius_doc/manual/demo-data/ms/Bicuculline.ms formula -p orbitrap write-summaries --output sirius_cli/src/test/ms_temp_summary_fa
#    - sirius -i sirius_doc/manual/demo-data/ms/Bicuculline.ms formula -p orbitrap fingerprint structure compound-classes write-summaries --output sirius_cli/src/test/ms_temp_summary_cca
#    - sirius -i sirius_doc/manual/demo-data/ms/Bicuculline.ms --ignore-formula formula -p orbitrap -c 5 write-summaries --output sirius_cli/src/test/ms_temp_summary_if
#    - cd sirius_cli/src/test/java/
#    - javac MsTest.java
#    - java MsTest
#    - cd..
#    - rmdir ms_temp_summary_fa
#    - rmdir ms_temp_summary_cca
#    - rmdir ms_temp_summary_if
#    - cd..
#    - cd..
#    - cd..

#    - cd sirius_cli/src/test/java/
#    - javac BuildTest.java
#    - java BuildTest


#push to github for multiOS build
pushToGitHub:
  stage: publish
  script:
    - git config --global user.email "${GITLAB_GITHUB_SIRIUS_USERNAME}"
    - git config --global user.name "boeckergitlab"
    - git remote show origin
    - git remote set-url --push origin git@github.com:boecker-lab/sirius.git
    - git remote show origin
#   todo  re-insert before merge to master
#    - git push --follow-tags origin HEAD:$CI_COMMIT_REF_NAME
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
  tags:
    - kubernetes
  only:
    refs:
      - stable
      - master-dist-tests
      - master